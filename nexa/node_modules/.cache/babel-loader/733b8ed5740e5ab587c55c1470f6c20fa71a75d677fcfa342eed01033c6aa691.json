{"ast":null,"code":"var _jsxFileName = \"/home/NexA/nexa/src/components/SideBar/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projectList, setProjectList] = useState([]);\n  const [sectionTitle, setSectionTitle] = useState('');\n  const handleClick = async label => {\n    let endpoint = '';\n    let title = '';\n    switch (label) {\n      case 'Completed':\n        endpoint = 'completed';\n        title = 'Audits Completed';\n        break;\n      case 'In-Progress':\n        endpoint = 'in-progress';\n        title = 'Audits In Progress';\n        break;\n      case 'Unexecuted':\n        endpoint = 'not-completed';\n        title = 'Audits Not Completed';\n        break;\n      case 'Project List':\n        endpoint = 'all-projects';\n        title = 'All Projects';\n        break;\n      default:\n        return;\n    }\n    try {\n      const response = await fetch(`http://localhost:2000/api/projects/${endpoint}`);\n      const data = await response.json();\n\n      // Determine the right key to extract\n      if (label === 'Project List' && data.projects) {\n        setProjectList(data.projects);\n      } else {\n        // Extract whichever key exists\n        const key = Object.keys(data)[0];\n        setProjectList(data[key] || []);\n      }\n      setSectionTitle(title);\n    } catch (error) {\n      console.error('❌ Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f4f6f9',\n      minHeight: '100vh',\n      width: '79.2%',\n      marginLeft: 'auto',\n      transform: 'translateY(-94%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        borderBottom: '1px solid #007BFF',\n        paddingBottom: '5px',\n        color: '#333'\n      },\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        marginTop: '40px',\n        flexWrap: 'wrap',\n        gap: '20px'\n      },\n      children: ['Completed', 'In-Progress', 'Unexecuted', 'Project List'].map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(label),\n        style: {\n          width: '120px',\n          height: '120px',\n          borderRadius: '50%',\n          backgroundColor: '#007BFF',\n          color: '#fff',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          cursor: 'pointer',\n          textAlign: 'center',\n          fontSize: '14px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          transition: 'transform 0.3s ease, box-shadow 0.3s ease'\n        },\n        onMouseEnter: e => {\n          e.currentTarget.style.transform = 'scale(1.1)';\n          e.currentTarget.style.boxShadow = '0 6px 10px rgba(0, 0, 0, 0.15)';\n        },\n        onMouseLeave: e => {\n          e.currentTarget.style.transform = 'scale(1)';\n          e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\n        },\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), projectList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: sectionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projectList.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [Object.entries(project).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"d8ImKpANReEJnRd6+JV2CmFHbIc=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Projects","_s","projectList","setProjectList","sectionTitle","setSectionTitle","handleClick","label","endpoint","title","response","fetch","data","json","projects","key","Object","keys","error","console","style","padding","fontFamily","backgroundColor","minHeight","width","marginLeft","transform","children","borderBottom","paddingBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginTop","flexWrap","gap","map","onClick","height","borderRadius","alignItems","cursor","textAlign","fontSize","boxShadow","transition","onMouseEnter","e","currentTarget","onMouseLeave","length","project","index","entries","value","_c","$RefreshReg$"],"sources":["/home/NexA/nexa/src/components/SideBar/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Projects = () => {\r\n  const [projectList, setProjectList] = useState([]);\r\n  const [sectionTitle, setSectionTitle] = useState('');\r\n\r\n  const handleClick = async (label) => {\r\n    let endpoint = '';\r\n    let title = '';\r\n\r\n    switch (label) {\r\n      case 'Completed':\r\n        endpoint = 'completed';\r\n        title = 'Audits Completed';\r\n        break;\r\n      case 'In-Progress':\r\n        endpoint = 'in-progress';\r\n        title = 'Audits In Progress';\r\n        break;\r\n      case 'Unexecuted':\r\n        endpoint = 'not-completed';\r\n        title = 'Audits Not Completed';\r\n        break;\r\n      case 'Project List':\r\n        endpoint = 'all-projects';\r\n        title = 'All Projects';\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:2000/api/projects/${endpoint}`);\r\n      const data = await response.json();\r\n\r\n      // Determine the right key to extract\r\n      if (label === 'Project List' && data.projects) {\r\n        setProjectList(data.projects);\r\n      } else {\r\n        // Extract whichever key exists\r\n        const key = Object.keys(data)[0];\r\n        setProjectList(data[key] || []);\r\n      }\r\n\r\n      setSectionTitle(title);\r\n    } catch (error) {\r\n      console.error('❌ Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n        backgroundColor: '#f4f6f9',\r\n        minHeight: '100vh',\r\n        width: '79.2%',\r\n        marginLeft: 'auto',\r\n        transform: 'translateY(-94%)',\r\n      }}\r\n    >\r\n      <h1 style={{ borderBottom: '1px solid #007BFF', paddingBottom: '5px', color: '#333' }}>\r\n        Projects\r\n      </h1>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          marginTop: '40px',\r\n          flexWrap: 'wrap',\r\n          gap: '20px',\r\n        }}\r\n      >\r\n        {['Completed', 'In-Progress', 'Unexecuted', 'Project List'].map((label) => (\r\n          <div\r\n            key={label}\r\n            onClick={() => handleClick(label)}\r\n            style={{\r\n              width: '120px',\r\n              height: '120px',\r\n              borderRadius: '50%',\r\n              backgroundColor: '#007BFF',\r\n              color: '#fff',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              cursor: 'pointer',\r\n              textAlign: 'center',\r\n              fontSize: '14px',\r\n              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n              transition: 'transform 0.3s ease, box-shadow 0.3s ease',\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.transform = 'scale(1.1)';\r\n              e.currentTarget.style.boxShadow = '0 6px 10px rgba(0, 0, 0, 0.15)';\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.transform = 'scale(1)';\r\n              e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\r\n            }}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Display Result List */}\r\n      {projectList.length > 0 && (\r\n        <div style={{ marginTop: '40px' }}>\r\n          <h2>{sectionTitle}</h2>\r\n          <ul>\r\n            {projectList.map((project, index) => (\r\n              <li key={index}>\r\n                {Object.entries(project).map(([key, value]) => (\r\n                  <div key={key}>\r\n                    <strong>{key}:</strong> {value}\r\n                  </div>\r\n                ))}\r\n                <hr />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}