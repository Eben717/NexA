{"ast":null,"code":"var _jsxFileName = \"/home/NexA/nexa/src/frontend/SideBar/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGO_PRIMARY = '#1a3a6b';\nconst LOGO_SECONDARY = '#4a6fa5';\nconst LOGO_BG = '#f4f8fb';\nconst Projects = () => {\n  _s();\n  const [projectList, setProjectList] = useState([]);\n  const [sectionTitle, setSectionTitle] = useState('');\n  const navigate = useNavigate();\n  const handleClick = async label => {\n    if (label === 'Project List') {\n      navigate('/all-projects');\n      return;\n    }\n    if (label === 'Completed') {\n      navigate('/completed');\n      return;\n    }\n    if (label === 'In-Progress') {\n      navigate('/in-progress');\n      return;\n    }\n    if (label === 'Unexecuted') {\n      navigate('/not-completed');\n      return;\n    }\n    let endpoint = '';\n    let title = '';\n    switch (label) {\n      case 'Completed':\n        endpoint = 'completed';\n        title = 'Audits Completed';\n        break;\n      case 'In-Progress':\n        endpoint = 'in-progress';\n        title = 'Audits In Progress';\n        break;\n      case 'Unexecuted':\n        endpoint = 'not-completed';\n        title = 'Audits Not Completed';\n        break;\n      default:\n        return;\n    }\n    try {\n      const response = await fetch(`http://localhost:2000/api/projects/${endpoint}`);\n      const data = await response.json();\n      const key = Object.keys(data)[0];\n      setProjectList(data[key] || []);\n      setSectionTitle(title);\n    } catch (error) {\n      console.error('❌ Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circles\",\n      children: ['Completed', 'In-Progress', 'Unexecuted', 'Project List'].map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(label),\n        className: \"circles2\",\n        onMouseEnter: e => {\n          e.currentTarget.style.transform = 'scale(1.1)';\n          e.currentTarget.style.boxShadow = '0 6px 10px rgba(0, 0, 0, 0.15)';\n        },\n        onMouseLeave: e => {\n          e.currentTarget.style.transform = 'scale(1)';\n          e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\n        },\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), projectList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: sectionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projectList.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [Object.entries(project).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"iXYbNMCSGUcocwFLDTvjY15M+Xk=\", false, function () {\n  return [useNavigate];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LOGO_PRIMARY","LOGO_SECONDARY","LOGO_BG","Projects","_s","projectList","setProjectList","sectionTitle","setSectionTitle","navigate","handleClick","label","endpoint","title","response","fetch","data","json","key","Object","keys","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onMouseEnter","e","currentTarget","style","transform","boxShadow","onMouseLeave","length","marginTop","project","index","entries","value","_c","$RefreshReg$"],"sources":["/home/NexA/nexa/src/frontend/SideBar/Projects/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst LOGO_PRIMARY = '#1a3a6b';\r\nconst LOGO_SECONDARY = '#4a6fa5';\r\nconst LOGO_BG = '#f4f8fb';\r\n\r\nconst Projects = () => {\r\n  const [projectList, setProjectList] = useState([]);\r\n  const [sectionTitle, setSectionTitle] = useState('');\r\n\r\nconst navigate = useNavigate();\r\n\r\n  const handleClick = async (label) => {\r\n  if (label === 'Project List') {\r\n    navigate('/all-projects');\r\n    return;\r\n  }\r\n  if (label === 'Completed') {\r\n    navigate('/completed');\r\n    return;\r\n  }\r\n  if (label === 'In-Progress') {\r\n    navigate('/in-progress');\r\n    return;\r\n  }\r\n  if (label === 'Unexecuted') {\r\n    navigate('/not-completed');\r\n    return;\r\n  }\r\n\r\n  let endpoint = '';\r\n  let title = '';\r\n\r\n  switch (label) {\r\n    case 'Completed':\r\n      endpoint = 'completed';\r\n      title = 'Audits Completed';\r\n      break;\r\n    case 'In-Progress':\r\n      endpoint = 'in-progress';\r\n      title = 'Audits In Progress';\r\n      break;\r\n    case 'Unexecuted':\r\n      endpoint = 'not-completed';\r\n      title = 'Audits Not Completed';\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:2000/api/projects/${endpoint}`);\r\n    const data = await response.json();\r\n    const key = Object.keys(data)[0];\r\n    setProjectList(data[key] || []);\r\n    setSectionTitle(title);\r\n  } catch (error) {\r\n    console.error('❌ Error fetching data:', error);\r\n  }\r\n};\r\n\r\n\r\n return (\r\n        <div className='container'>\r\n            {/* Header */}\r\n            <h1 className='header'>\r\n                Projects\r\n            </h1>\r\n            \r\n            {/* Circles */}\r\n            <div className='circles'>\r\n        {['Completed', 'In-Progress', 'Unexecuted', 'Project List'].map((label) => (\r\n          <div\r\n            key={label}\r\n            onClick={() => handleClick(label)}\r\n            className='circles2'\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.transform = 'scale(1.1)';\r\n              e.currentTarget.style.boxShadow = '0 6px 10px rgba(0, 0, 0, 0.15)';\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.transform = 'scale(1)';\r\n              e.currentTarget.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\r\n            }}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Display Result List */}\r\n      {projectList.length > 0 && (\r\n        <div style={{ marginTop: '40px' }}>\r\n          <h2>{sectionTitle}</h2>\r\n          <ul>\r\n            {projectList.map((project, index) => (\r\n              <li key={index}>\r\n                {Object.entries(project).map(([key, value]) => (\r\n                  <div key={key}>\r\n                    <strong>{key}:</strong> {value}\r\n                  </div>\r\n                ))}\r\n                <hr />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,YAAY,GAAG,SAAS;AAC9B,MAAMC,cAAc,GAAG,SAAS;AAChC,MAAMC,OAAO,GAAG,SAAS;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE5B,MAAMa,WAAW,GAAG,MAAOC,KAAK,IAAK;IACrC,IAAIA,KAAK,KAAK,cAAc,EAAE;MAC5BF,QAAQ,CAAC,eAAe,CAAC;MACzB;IACF;IACA,IAAIE,KAAK,KAAK,WAAW,EAAE;MACzBF,QAAQ,CAAC,YAAY,CAAC;MACtB;IACF;IACA,IAAIE,KAAK,KAAK,aAAa,EAAE;MAC3BF,QAAQ,CAAC,cAAc,CAAC;MACxB;IACF;IACA,IAAIE,KAAK,KAAK,YAAY,EAAE;MAC1BF,QAAQ,CAAC,gBAAgB,CAAC;MAC1B;IACF;IAEA,IAAIG,QAAQ,GAAG,EAAE;IACjB,IAAIC,KAAK,GAAG,EAAE;IAEd,QAAQF,KAAK;MACX,KAAK,WAAW;QACdC,QAAQ,GAAG,WAAW;QACtBC,KAAK,GAAG,kBAAkB;QAC1B;MACF,KAAK,aAAa;QAChBD,QAAQ,GAAG,aAAa;QACxBC,KAAK,GAAG,oBAAoB;QAC5B;MACF,KAAK,YAAY;QACfD,QAAQ,GAAG,eAAe;QAC1BC,KAAK,GAAG,sBAAsB;QAC9B;MACF;QACE;IACJ;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCH,QAAQ,EAAE,CAAC;MAC9E,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;MAChCV,cAAc,CAACU,IAAI,CAACE,GAAG,CAAC,IAAI,EAAE,CAAC;MAC/BV,eAAe,CAACK,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAGA,oBACOtB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBzB,OAAA;MAAIwB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAEvB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGL7B,OAAA;MAAKwB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAC3B,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY,EAAE,cAAc,CAAC,CAACK,GAAG,CAAElB,KAAK,iBACpEZ,OAAA;QAEE+B,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACC,KAAK,CAAE;QAClCY,SAAS,EAAC,UAAU;QACpBQ,YAAY,EAAGC,CAAC,IAAK;UACnBA,CAAC,CAACC,aAAa,CAACC,KAAK,CAACC,SAAS,GAAG,YAAY;UAC9CH,CAAC,CAACC,aAAa,CAACC,KAAK,CAACE,SAAS,GAAG,gCAAgC;QACpE,CAAE;QACFC,YAAY,EAAGL,CAAC,IAAK;UACnBA,CAAC,CAACC,aAAa,CAACC,KAAK,CAACC,SAAS,GAAG,UAAU;UAC5CH,CAAC,CAACC,aAAa,CAACC,KAAK,CAACE,SAAS,GAAG,8BAA8B;QAClE,CAAE;QAAAZ,QAAA,EAEDb;MAAK,GAZDA,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLvB,WAAW,CAACiC,MAAM,GAAG,CAAC,iBACrBvC,OAAA;MAAKmC,KAAK,EAAE;QAAEK,SAAS,EAAE;MAAO,CAAE;MAAAf,QAAA,gBAChCzB,OAAA;QAAAyB,QAAA,EAAKjB;MAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvB7B,OAAA;QAAAyB,QAAA,EACGnB,WAAW,CAACwB,GAAG,CAAC,CAACW,OAAO,EAAEC,KAAK,kBAC9B1C,OAAA;UAAAyB,QAAA,GACGL,MAAM,CAACuB,OAAO,CAACF,OAAO,CAAC,CAACX,GAAG,CAAC,CAAC,CAACX,GAAG,EAAEyB,KAAK,CAAC,kBACxC5C,OAAA;YAAAyB,QAAA,gBACEzB,OAAA;cAAAyB,QAAA,GAASN,GAAG,EAAC,GAAC;YAAA;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACe,KAAK;UAAA,GADtBzB,GAAG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACN,CAAC,eACF7B,OAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GANCa,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAxGID,QAAQ;EAAA,QAIGN,WAAW;AAAA;AAAA+C,EAAA,GAJtBzC,QAAQ;AA0Gd,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}